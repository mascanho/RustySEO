// @ts-nocheck
"use client";
export const dynamic = "force-static";
import "@mantine/core/styles.css";
import { Roboto } from "next/font/google";
import "./globals.css";
import { MantineProvider } from "@mantine/core";
import MenuDrawer from "./components/ui/MenuDrawer";
import TopMenuBar from "./components/ui/TopMenuBar";
import { useEffect, useState } from "react";
import { Toaster } from "@/components/ui/sonner";
import Footer from "./components/ui/Footer";
import Loader from "@/components/Loader/Loader";
import { invoke } from "@tauri-apps/api/core";
import { toast } from "sonner";
import { ChatBar } from "./components/Chat/Chatbar";
import { usePathname } from "next/navigation";

const roboto = Roboto({
  // weight: ["400"], // Specify weights you need
  subsets: ["latin"], // Optimize for Latin characters
  display: "swap", // Improves loading performance
  variable: "--font-roboto", // Optional: CSS variable name
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const pathname = usePathname();

  // GET THE THEME AND SET IT
  useEffect(() => {
    // On component mount, check local storage for dark mode preference
    const darkMode = localStorage?.getItem("dark-mode") === "true";
    setIsDarkMode(darkMode);

    // Add or remove the dark class on the root element
    if (darkMode) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  }, []);

  useEffect(() => {
    const checkVersion = async () => {
      try {
        const version = await invoke("version_check_command");

        setTimeout(() => {
          if (version.local !== version.github) {
            toast(
              <span>
                RustySEO has a new release. Please update it{" "}
                <a href="https://github.com/mascanho/rustyseo/releases/">
                  here
                </a>
              </span>
            );
          }
        }, 50000);

        localStorage.setItem("app-version", version.local as string);
      } catch (err) {
        console.error("Failed to check version:", err);
      }
    };
    checkVersion();
  }, []);

  return (
    <html lang="en" className="min-w-[600px]" suppressHydrationWarning>
      <body
        className={`relative overflow-hidden rounded-md bg-gray-100 dark:bg-brand-darker/95 ${roboto.className}`}
        suppressHydrationWarning
      >
        <MantineProvider>
          {/* Fixed MenuDrawer */}
          <section className="mb-[6.3rem]">
            <Loader />
            <TopMenuBar />
            <ChatBar />
          </section>
          <main className="mt-9   rounded-md  ">
            {children}
            {pathname === "/ppc" ? "" : <Toaster />}
          </main>
          <Footer />
        </MantineProvider>
      </body>
    </html>
  );
}
